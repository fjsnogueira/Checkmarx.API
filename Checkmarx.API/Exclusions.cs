// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using Checkmarx.API;
//
//    var exclusions = Exclusions.FromJson(jsonString);

namespace Checkmarx.API
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Exclusions
    {
        [JsonProperty("Folders", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> Folders { get; set; }

        [JsonProperty("Files", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> Files { get; set; }
    }

    public partial class Exclusions
    {
        public static Exclusions FromJson(string json) => JsonConvert.DeserializeObject<Exclusions>(json, Checkmarx.API.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this Exclusions self) => JsonConvert.SerializeObject(self, Checkmarx.API.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
